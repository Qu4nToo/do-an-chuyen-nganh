// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid()) @db.Char(36)
  firstName String @db.VarChar(30)
  lastName  String @db.VarChar(30)
  passWord  String @db.VarChar(30)
  email     String @unique @db.VarChar(30)
  roleID    String  @db.Char(36)
  role      Role    @relation(fields: [roleID], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders    Order[]
}

enum RoleName {
  Admin
  User
}

model Role {
  id       String    @id @default(uuid()) @db.Char(36)
  roleName RoleName @default(User)
  users    User[]
}

enum OrderStatus {
  Pending // Đơn hàng đang chờ xử lý
  Processing // Đơn hàng đang được xử lý
  Completed // Đơn hàng đã hoàn thành
  Cancelled // Đơn hàng đã bị hủy
}

model Order {
  id           String        @id @default(uuid()) @db.Char(36)
  status       OrderStatus?  @default(Pending)
  address      String?       @db.VarChar(30)
  userID       String        @db.Char(36)
  user         User          @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: NoAction)
  coupons      Coupon[]
  orderDetails OrderDetail[]
}

model Coupon {
  id            String    @id @default(uuid()) @db.Char(36)
  endDate       DateTime 
  startDate     DateTime 
  discountValue Int?
  couponCode    String   @unique @default(uuid()) @db.Char(36)
  orderID       String    @db.Char(36)
  order         Order     @relation(fields: [orderID], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Category {
  id           String    @id @default(uuid()) @db.Char(36)
  categoryName String   @db.VarChar(30)
  products     Product[]
}

model Product {
  id           String        @id @default(uuid()) @db.Char(36)
  title        String       @db.VarChar(30)
  description  String      @db.VarChar(50)
  price        Decimal
  image        String       @db.VarChar(30)
  categoryID   String        @db.Char(36)
  category     Category      @relation(fields: [categoryID], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orderDetails OrderDetail[]
}

model OrderDetail {
  orderID    String    @db.Char(36)
  productID  String    @db.Char(36)
  totalPrice Float
  quantity   Int
  orderDate  DateTime
  order      Order     @relation(fields: [orderID], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product    Product   @relation(fields: [productID], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@id([orderID,productID])
}
